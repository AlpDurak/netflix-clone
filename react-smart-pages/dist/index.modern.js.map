{"version":3,"file":"index.modern.js","sources":["../src/tools/importAll.js","../src/smartPages.js"],"sourcesContent":["// export function importAllFiles(directoryPath, options) {\r\n//  const { fileType, fileCategory, checkTree } = options\r\n//  if (!fileCategory) throw Error('fileCategory is required for importAllFiles.')\r\n//  if (!fileType) throw Error('fileType is required for importAllFiles.')\r\n//  if (!directoryPath)\r\n//    throw Error('directoryPath is required for importAllFiles.')\r\n//  const regexp = new RegExp('.' + `${fileCategory}.${fileType}` + '$')\r\n//  const tree = checkTree || false\r\n//  const files = require.context(`${directoryPath}`, tree, regexp)\r\n//  const filesObject = {}\r\n//  files.keys().forEach((key) => {\r\n//    filesObject[key.replace('./', '')] = files(key)\r\n//  })\r\n//  return filesObject\r\n// }\r\n\r\nimport fs from 'fs'\r\n\r\nexport function importAllFiles(directoryPath, options) {\r\n  const { fileType, fileCategory } = options\r\n  if (!fileCategory) throw Error('fileCategory is required for importAllFiles.')\r\n  if (!fileType) throw Error('fileType is required for importAllFiles.')\r\n  if (!directoryPath)\r\n    throw Error('directoryPath is required for importAllFiles.')\r\n  const regexp = new RegExp('.' + `${fileCategory}.${fileType}` + '$')\r\n  const files = fs.readdirSync(directoryPath)\r\n  const filesObject = {}\r\n  files.forEach((file) => {\r\n    if (regexp.test(file)) {\r\n      filesObject[file.replace('./', '')] = require(`${directoryPath}/${file}`)\r\n    }\r\n  })\r\n  return filesObject\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { importAllFiles } from './tools/importAll'\r\n\r\nexport function SmartRoute({ directoryPath, options }) {\r\n  if (!directoryPath)\r\n    throw new Error('directoryPath is required for SmartRoute.')\r\n\r\n  const parentPages = importAllFiles(directoryPath, {\r\n    fileType: options?.fileType || 'js',\r\n    fileCategory: options?.fileCategory || 'parentPage',\r\n    checkTree: true\r\n  })\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(parentPages).map((key, i) => {\r\n        const page = parentPages[key].default\r\n        let Element = page[1]\r\n        return (\r\n          <Route key={i}>\r\n            <Route path={`/${page[0].pathName}`} element={<Element />} />\r\n            {page[2]().map((e) => e)}\r\n          </Route>\r\n        )\r\n      })}\r\n    </React.Fragment>\r\n  )\r\n}\r\n"],"names":["importAllFiles","directoryPath","options","fileType","fileCategory","Error","regexp","RegExp","files","fs","readdirSync","filesObject","forEach","file","test","replace","require","SmartRoute","parentPages","checkTree","Object","keys","map","key","i","page","Element","pathName","e"],"mappings":";;;;AAkBO,SAASA,cAAT,CAAwBC,aAAxB,EAAuCC,OAAvC,EAAgD;EACrD,IAAQC,QAAR,GAAmCD,OAAnC,CAAQC,QAAR;MAAkBC,YAAlB,GAAmCF,OAAnC,CAAkBE,YAAlB;EACA,IAAI,CAACA,YAAL,EAAmB,MAAMC,KAAK,CAAC,8CAAD,CAAX;EACnB,IAAI,CAACF,QAAL,EAAe,MAAME,KAAK,CAAC,0CAAD,CAAX;EACf,IAAI,CAACJ,aAAL,EACE,MAAMI,KAAK,CAAC,+CAAD,CAAX;EACF,IAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAW,OAASH,YAAT,SAAyBD,QAAzB,IAAsC,GAAjD,CAAf;EACA,IAAMK,KAAK,GAAGC,EAAE,CAACC,WAAH,CAAeT,aAAf,CAAd;EACA,IAAMU,WAAW,GAAG,EAApB;EACAH,KAAK,CAACI,OAAN,CAAc,UAACC,IAAD,EAAU;IACtB,IAAIP,MAAM,CAACQ,IAAP,CAAYD,IAAZ,CAAJ,EAAuB;MACrBF,WAAW,CAACE,IAAI,CAACE,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAX,GAAsCC,OAAO,CAAIf,aAAJ,SAAqBY,IAArB,CAA7C;;GAFJ;EAKA,OAAOF,WAAP;AACD;;AC7BM,SAASM,UAAT,OAAgD;EAAA,IAA1BhB,aAA0B,QAA1BA,aAA0B;MAAXC,OAAW,QAAXA,OAAW;EACrD,IAAI,CAACD,aAAL,EACE,MAAM,IAAII,KAAJ,CAAU,2CAAV,CAAN;EAEF,IAAMa,WAAW,GAAGlB,cAAc,CAACC,aAAD,EAAgB;IAChDE,QAAQ,EAAE,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,QAAT,KAAqB,IADiB;IAEhDC,YAAY,EAAE,CAAAF,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,YAAT,KAAyB,YAFS;IAGhDe,SAAS,EAAE;GAHqB,CAAlC;EAKA,oBACE,oBAAC,KAAD,CAAO,QAAP,QACGC,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6B,UAACC,GAAD,EAAMC,CAAN,EAAY;IACxC,IAAMC,IAAI,GAAGP,WAAW,CAACK,GAAD,CAAX,WAAb;IACA,IAAIG,OAAO,GAAGD,IAAI,CAAC,CAAD,CAAlB;IACA,oBACE,oBAAC,KAAD;MAAO,GAAG,EAAED;oBACV,oBAAC,KAAD;MAAO,IAAI,QAAMC,IAAI,CAAC,CAAD,CAAJ,CAAQE,QAAzB;MAAqC,OAAO,eAAE,oBAAC,OAAD;MADhD,EAEGF,IAAI,CAAC,CAAD,CAAJ,GAAUH,GAAV,CAAc,UAACM,CAAD;MAAA,OAAOA,CAAP;KAAd,CAFH,CADF;GAHD,CADH,CADF;AAcD;;;;"}